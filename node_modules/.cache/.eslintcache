[{"/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/index.js":"1","/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/reportWebVitals.js":"2","/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/App.js":"3","/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/ItemContainer/ItemContainer.jsx":"4","/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/ItemContainer/SingleItemComponent/SingleItemComponent.jsx":"5","/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/ItemContainer/NewItemComponent/NewItemComponent.jsx":"6","/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/ItemContainer/SingleItemComponent/EditItemComponent/EditItemComponent.jsx":"7","/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/NavComponents/about.jsx":"8","/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/NavComponents/nav.jsx":"9","/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/NavComponents/contact.jsx":"10"},{"size":500,"mtime":1648492720626,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1648492720626,"results":"13","hashOfConfig":"12"},{"size":1401,"mtime":1648593589995,"results":"14","hashOfConfig":"12"},{"size":4922,"mtime":1648660157954,"results":"15","hashOfConfig":"12"},{"size":3723,"mtime":1648594070538,"results":"16","hashOfConfig":"12"},{"size":3059,"mtime":1648593673018,"results":"17","hashOfConfig":"12"},{"size":2433,"mtime":1648512866874,"results":"18","hashOfConfig":"12"},{"size":494,"mtime":1648594950284,"results":"19","hashOfConfig":"12"},{"size":539,"mtime":1648594244153,"results":"20","hashOfConfig":"12"},{"size":172,"mtime":1648588682871,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"mz43j4",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"25"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/index.js",[],[],["58","59"],"/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/reportWebVitals.js",[],[],"/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/App.js",["60"],[],"//import logo from './logo.svg';\nimport './App.css';\nimport ItemContainer from './ItemContainer/ItemContainer';\nimport Nav from './NavComponents/nav';\nimport About from './NavComponents/about';\nimport Contact from './NavComponents/contact';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport NewItemComponent from './ItemContainer/NewItemComponent/NewItemComponent';\nimport {Link} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\" alt=\"Logo\">\n        <Nav></Nav>\n        <Routes>\n          <Route path=\"/\" element={<Home />}></Route>\n          <Route path=\"/about\" element={<About />}></Route>\n          <Route path=\"/contact\" element={<Contact />}></Route>\n          <Route path=\"/view\" element={<ItemContainer />}></Route>\n          {/* <Route path=\"/create\" element={<NewItemComponent createNewNeighborhood={createNewNeighborhood} newItemServerError={newItemServerError} />}></Route> */}\n        </Routes>\n      </div>\n    </Router>\n  );\n};\nconst Home = () => {\n  return (\n    <main>\n          <h1>Welcome to Neighborly!</h1>\n          <h2>Find your neighborhood community!</h2>\n          <div className='buttons'>\n            <Link to='/view'>\n              <button>View Neighborhoods</button>\n            </Link>\n          </div>\n          {/* <ItemContainer></ItemContainer> */}\n    </main>\n  );\n};\n\nexport default App;\n",["61","62"],"/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/ItemContainer/ItemContainer.jsx",["63","64","65","66","67","68","69","70","71","72","73"],[],"/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/ItemContainer/SingleItemComponent/SingleItemComponent.jsx",["74"],[],"import React from \"react\";\nimport { useState } from \"react\";\nimport EditItemComponent from \"./EditItemComponent/EditItemComponent\";\n\nconst SingleItemComponent = (props) => {\n    const [showing, setShowing] = useState(false);\n    const toggleShowing = () => {\n        setShowing(!showing);\n    };\n    // // we want the form to start as filled out\n    // const [updateNeighborhood, setUpdateNeighborhood] = useState({\n    //     name: props.neighborhood.name,\n    //     location: props.neighborhood.location,\n    //     _id: props.neighborhood._id\n    // });\n    // // create a new function to listen for change, which is determined by an event, and get the value of the change\n    // const handleInputChange = (e) => {\n    //     //// e.target will target the element that you are targeting the event on\n    //     // update state\n    //     setUpdateNeighborhood ({\n    //         // we still want to keep all of the new items becuase of the preset properties\n    //         ...updateNeighborhood,\n    //         // use e.target.name to get the name of the element\n    //         [e.target.name]: e.target.value\n    //     });\n    //     console.log(updateNeighborhood);\n    // };\n    // const submitUpdateNeighborhood = (e) => {\n    //     // want to stop the page from refreshing when submit button is pressed\n    //     e.preventDefault();\n    //     props.updateNeighborhood(props.neighborhood._id, updateNeighborhood);\n    //     setShowing(false); \n    // }\n    return (\n        <div>\n            <h1>{props.neighborhood.name}</h1>\n            <img src={props.neighborhood.img} className=\"neighborhood-img\"></img>\n            <div className=\"buttons\">\n                <button>View More</button>\n                <button onClick={ ()=> {\n                    props.deleteNeighborhood(props.neighborhood._id);\n                }}>Delete this Neighborhood</button>\n            </div>\n            {showing ?\n                // <div id=\"edit-neighborhood-form\">\n                //     {/* close button for form */}\n                //     <button onClick={toggleShowing}>Close</button>\n                //     {/* we want to prevent the page from loading once we hit the submit button because we want to be able to take in that info which reloading would make it disappear */}\n                //     {/* we also want to call new item from parent */}\n                //     <form onSubmit={submitUpdateNeighborhood}>\n                //         {isValidState.valid ? null : <p className='form-error'>{isValidState.message}</p>}\n                //         Neighborhood Name: <input type=\"text\" name=\"name\" onChange={handleInputChange} value={updateNeighborhood.name}></input>\n                //         Location: <input type=\"text\" name=\"location\" onChange={handleInputChange} value={updateNeighborhood.location}></input>\n                //         Image: <input type=\"text\" name=\"img\" onChange={handleInputChange} value={updateNeighborhood.img}></input>\n                //         <br></br>\n                //         <button type=\"submit\">Submit</button>\n                //     </form>\n                // </div>\n                <div id=\"edit-neighborhood-form\">\n                    {/* close button for form */}\n                    <button onClick={toggleShowing}>Close</button>\n                    <EditItemComponent neighborhood={props.neighborhood} updateNeighborhood={props.updateNeighborhood} setShowing={setShowing}></EditItemComponent>\n                </div>\n                :\n                // else, show the button to create one that also has an event listener attached\n                <button onClick={toggleShowing}>Edit this item</button>\n            }\n        </div>\n    );\n};\n\nexport default SingleItemComponent;","/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/ItemContainer/NewItemComponent/NewItemComponent.jsx",["75"],[],"import React from \"react\";\nimport { useState, useEffect } from 'react';\n\nconst NewItemComponent = (props) => {\n    const [isValidState, setIsValidState] = useState ({valid: true, message: \"\"});\n    const [showing, setShowing] = useState(false);\n    const toggleShowing = () => {\n        setShowing(!showing);\n    };\n    const [newNeighborhood, setNewNeighborhood] = useState ({\n        name: \"\",\n        location: \"\",\n        img: \"\"\n    });\n    const handleInputChange = (e) => {\n        setNewNeighborhood ({\n            ...newNeighborhood,\n            [e.target.name]: e.target.value\n        });\n    };\n    const submitNewItem = (e)=>{\n        e.preventDefault();\n        let validSubmission = true;\n        // check if input is valid\n        if (newNeighborhood.name.length < 3) {\n            setIsValidState({\n                valid: false,\n                message: \"Name needs to be longer\"\n            });\n            validSubmission = false;\n        };\n        if (validSubmission) {\n            // call new item function and pass in the newItem state as the parameter\n            props.createNewNeighborhood(newNeighborhood);\n            // when we hit submit, we also want to reset values of input fields and set default value to equal these\n            setNewNeighborhood({\n                name: \"\",\n                location: \"\",\n                img: \"\"\n            });\n            setIsValidState({\n                valid: true,\n                message: \"\"\n            });\n            setShowing(false);\n        } \n    };\n    return (\n        <>\n            { showing ?\n                <div id=\"new-item-form\">\n                    {/* close button for form */}\n                    <button onClick={toggleShowing}>Close</button>\n                    {/* we want to prevent the page from loading once we hit the submit button because we want to be able to take in that info which reloading would make it disappear */}\n                    {/* we also want to call new item from parent */}\n                    <form onSubmit={submitNewItem}>\n                        {isValidState.valid ? null : <p className='form-error'>{isValidState.message}</p>}\n                        {console.log(isValidState)}\n                        {props.newItemServerError ? <p className='form-error'>{props.newItemServerError}</p> : null}\n                        Neighborhood Name: <input type=\"text\" name=\"name\" onChange={handleInputChange} value={newNeighborhood.name}></input>\n                        Location: <input type=\"text\" name=\"location\" onChange={handleInputChange} value={newNeighborhood.location}></input>\n                        Image: <input type=\"text\" name=\"img\" onChange={handleInputChange} value={newNeighborhood.img}></input>\n                        <br></br>\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                </div>\n                :\n                <button onClick={toggleShowing}>Create New Neighborhood</button>\n            }\n            \n        </>\n    );\n};\n\nexport default NewItemComponent;","/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/ItemContainer/SingleItemComponent/EditItemComponent/EditItemComponent.jsx",["76"],[],"import React from \"react\";\nimport { useState } from \"react\";\n\nconst EditItemComponent = (props) => {\n    const [isValidState, setIsValidState] = useState ({valid: true, message: \"\"});\n    // we want the form to start as filled out\n    const [updateNeighborhood, setUpdateNeighborhood] = useState({\n        name: props.neighborhood.name,\n        location: props.neighborhood.location,\n        img: props.neighborhood.img,\n        _id: props.neighborhood._id\n    });\n    // create a new function to listen for change, which is determined by an event, and get the value of the change\n    const handleInputChange = (e) => {\n        //// e.target will target the element that you are targeting the event on\n        // update state\n        setUpdateNeighborhood ({\n            // we still want to keep all of the new items becuase of the preset properties\n            ...updateNeighborhood,\n            // use e.target.name to get the name of the element\n            [e.target.name]: e.target.value\n        });\n        console.log(updateNeighborhood);\n    };\n    const submitUpdateNeighborhood = (e) => {\n        // want to stop the page from refreshing when submit button is pressed\n        e.preventDefault();\n        props.updateNeighborhood(props.neighborhood._id, updateNeighborhood);\n        props.setShowing(false); \n    }\n    return (\n        <div id=\"edit-neighborhood-form\">\n                    \n                    {/* we want to prevent the page from loading once we hit the submit button because we want to be able to take in that info which reloading would make it disappear */}\n                    {/* we also want to call new item from parent */}\n                    <form onSubmit={submitUpdateNeighborhood}>\n                        {isValidState.valid ? null : <p className='form-error'>{isValidState.message}</p>}\n                        Neighborhood Name: <input type=\"text\" name=\"name\" onChange={handleInputChange} value={updateNeighborhood.name}></input>\n                        Location: <input type=\"text\" name=\"location\" onChange={handleInputChange} value={updateNeighborhood.location}></input>\n                        Image: <input type=\"text\" name=\"img\" onChange={handleInputChange} value={updateNeighborhood.img}></input>\n                        <br></br>\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                </div>\n    )\n}\n\nexport default EditItemComponent;","/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/NavComponents/about.jsx",[],[],"/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/NavComponents/nav.jsx",["77"],[],"/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/NavComponents/contact.jsx",[],[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":8,"column":8,"nodeType":"84","messageId":"85","endLine":8,"endColumn":24},{"ruleId":"78","replacedBy":"86"},{"ruleId":"80","replacedBy":"87"},{"ruleId":"82","severity":1,"message":"88","line":6,"column":27,"nodeType":"84","messageId":"85","endLine":6,"endColumn":33},{"ruleId":"82","severity":1,"message":"89","line":6,"column":35,"nodeType":"84","messageId":"85","endLine":6,"endColumn":41},{"ruleId":"82","severity":1,"message":"90","line":6,"column":43,"nodeType":"84","messageId":"85","endLine":6,"endColumn":48},{"ruleId":"82","severity":1,"message":"91","line":7,"column":9,"nodeType":"84","messageId":"85","endLine":7,"endColumn":13},{"ruleId":"82","severity":1,"message":"92","line":11,"column":12,"nodeType":"84","messageId":"85","endLine":11,"endColumn":24},{"ruleId":"82","severity":1,"message":"93","line":14,"column":11,"nodeType":"84","messageId":"85","endLine":14,"endColumn":24},{"ruleId":"94","severity":1,"message":"95","line":32,"column":35,"nodeType":"96","messageId":"97","endLine":32,"endColumn":37},{"ruleId":"94","severity":1,"message":"95","line":53,"column":39,"nodeType":"96","messageId":"97","endLine":53,"endColumn":41},{"ruleId":"98","severity":1,"message":"99","line":72,"column":30,"nodeType":"100","endLine":80,"endColumn":6},{"ruleId":"94","severity":1,"message":"95","line":90,"column":35,"nodeType":"96","messageId":"97","endLine":90,"endColumn":37},{"ruleId":"94","severity":1,"message":"95","line":93,"column":42,"nodeType":"96","messageId":"97","endLine":93,"endColumn":44},{"ruleId":"101","severity":1,"message":"102","line":37,"column":13,"nodeType":"103","endLine":37,"endColumn":76},{"ruleId":"82","severity":1,"message":"104","line":2,"column":20,"nodeType":"84","messageId":"85","endLine":2,"endColumn":29},{"ruleId":"82","severity":1,"message":"105","line":5,"column":26,"nodeType":"84","messageId":"85","endLine":5,"endColumn":41},{"ruleId":"101","severity":1,"message":"102","line":9,"column":11,"nodeType":"103","endLine":9,"endColumn":37},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'NewItemComponent' is defined but never used.","Identifier","unusedVar",["106"],["107"],"'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'requestError' is assigned a value but never used.","'toggleShowing' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'setIsValidState' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]