{"ast":null,"code":"var _jsxFileName = \"/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/ItemContainer/SingleItemComponent/EditItemComponent/EditItemComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditItemComponent = props => {\n  _s();\n\n  // we want the form to start as filled out\n  const [updateNeighborhood, setUpdateNeighborhood] = useState({\n    name: props.neighborhood.name,\n    location: props.neighborhood.location,\n    _id: props.neighborhood._id\n  }); // create a new function to listen for change, which is determined by an event, and get the value of the change\n\n  const handleInputChange = e => {\n    //// e.target will target the element that you are targeting the event on\n    // update state\n    setUpdateNeighborhood({ // we still want to keep all of the new items becuase of the preset properties\n      ...updateNeighborhood,\n      // use e.target.name to get the name of the element\n      [e.target.name]: e.target.value\n    });\n    console.log(updateNeighborhood);\n  };\n\n  const submitUpdateNeighborhood = e => {\n    // want to stop the page from refreshing when submit button is pressed\n    e.preventDefault();\n    props.updateNeighborhood(props.neighborhood._id, updateNeighborhood);\n    setShowing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"edit-neighborhood-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleShowing,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitUpdateNeighborhood,\n      children: [isValidState.valid ? null : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-error\",\n        children: isValidState.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 54\n      }, this), \"Neighborhood Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        onChange: handleInputChange,\n        value: updateNeighborhood.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 44\n      }, this), \"Location: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"location\",\n        onChange: handleInputChange,\n        value: updateNeighborhood.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 35\n      }, this), \"Image: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"img\",\n        onChange: handleInputChange,\n        value: updateNeighborhood.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditItemComponent, \"Y+RfaGMrzwMditVdgZ1gN6/iEnY=\");\n\n_c = EditItemComponent;\nexport default EditItemComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditItemComponent\");","map":{"version":3,"sources":["/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/ItemContainer/SingleItemComponent/EditItemComponent/EditItemComponent.jsx"],"names":["React","EditItemComponent","props","updateNeighborhood","setUpdateNeighborhood","useState","name","neighborhood","location","_id","handleInputChange","e","target","value","console","log","submitUpdateNeighborhood","preventDefault","setShowing","toggleShowing","isValidState","valid","message","img"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AACjC;AACA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CC,QAAQ,CAAC;AACzDC,IAAAA,IAAI,EAAEJ,KAAK,CAACK,YAAN,CAAmBD,IADgC;AAEzDE,IAAAA,QAAQ,EAAEN,KAAK,CAACK,YAAN,CAAmBC,QAF4B;AAGzDC,IAAAA,GAAG,EAAEP,KAAK,CAACK,YAAN,CAAmBE;AAHiC,GAAD,CAA5D,CAFiC,CAOjC;;AACA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC7B;AACA;AACAP,IAAAA,qBAAqB,CAAE,EACnB;AACA,SAAGD,kBAFgB;AAGnB;AACA,OAACQ,CAAC,CAACC,MAAF,CAASN,IAAV,GAAiBK,CAAC,CAACC,MAAF,CAASC;AAJP,KAAF,CAArB;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,kBAAZ;AACH,GAVD;;AAWA,QAAMa,wBAAwB,GAAIL,CAAD,IAAO;AACpC;AACAA,IAAAA,CAAC,CAACM,cAAF;AACAf,IAAAA,KAAK,CAACC,kBAAN,CAAyBD,KAAK,CAACK,YAAN,CAAmBE,GAA5C,EAAiDN,kBAAjD;AACAe,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GALD;;AAMA,sBACI;AAAK,IAAA,EAAE,EAAC,wBAAR;AAAA,4BAEY;AAAQ,MAAA,OAAO,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFZ,eAKY;AAAM,MAAA,QAAQ,EAAEH,wBAAhB;AAAA,iBACKI,YAAY,CAACC,KAAb,GAAqB,IAArB,gBAA4B;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA,kBAA2BD,YAAY,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA,cADjC,sCAEuB;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,QAAQ,EAAEZ,iBAAzC;AAA4D,QAAA,KAAK,EAAEP,kBAAkB,CAACG;AAAtF;AAAA;AAAA;AAAA;AAAA,cAFvB,6BAGc;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,QAAQ,EAAEI,iBAA7C;AAAgE,QAAA,KAAK,EAAEP,kBAAkB,CAACK;AAA1F;AAAA;AAAA;AAAA;AAAA,cAHd,0BAIW;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,KAAxB;AAA8B,QAAA,QAAQ,EAAEE,iBAAxC;AAA2D,QAAA,KAAK,EAAEP,kBAAkB,CAACoB;AAArF;AAAA;AAAA;AAAA;AAAA,cAJX,eAKI;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAzCD;;GAAMtB,iB;;KAAAA,iB;AA2CN,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\n\nconst EditItemComponent = (props) => {\n    // we want the form to start as filled out\n    const [updateNeighborhood, setUpdateNeighborhood] = useState({\n        name: props.neighborhood.name,\n        location: props.neighborhood.location,\n        _id: props.neighborhood._id\n    });\n    // create a new function to listen for change, which is determined by an event, and get the value of the change\n    const handleInputChange = (e) => {\n        //// e.target will target the element that you are targeting the event on\n        // update state\n        setUpdateNeighborhood ({\n            // we still want to keep all of the new items becuase of the preset properties\n            ...updateNeighborhood,\n            // use e.target.name to get the name of the element\n            [e.target.name]: e.target.value\n        });\n        console.log(updateNeighborhood);\n    };\n    const submitUpdateNeighborhood = (e) => {\n        // want to stop the page from refreshing when submit button is pressed\n        e.preventDefault();\n        props.updateNeighborhood(props.neighborhood._id, updateNeighborhood);\n        setShowing(false); \n    }\n    return (\n        <div id=\"edit-neighborhood-form\">\n                    {/* close button for form */}\n                    <button onClick={toggleShowing}>Close</button>\n                    {/* we want to prevent the page from loading once we hit the submit button because we want to be able to take in that info which reloading would make it disappear */}\n                    {/* we also want to call new item from parent */}\n                    <form onSubmit={submitUpdateNeighborhood}>\n                        {isValidState.valid ? null : <p className='form-error'>{isValidState.message}</p>}\n                        Neighborhood Name: <input type=\"text\" name=\"name\" onChange={handleInputChange} value={updateNeighborhood.name}></input>\n                        Location: <input type=\"text\" name=\"location\" onChange={handleInputChange} value={updateNeighborhood.location}></input>\n                        Image: <input type=\"text\" name=\"img\" onChange={handleInputChange} value={updateNeighborhood.img}></input>\n                        <br></br>\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                </div>\n    )\n}\n\nexport default EditItemComponent;"]},"metadata":{},"sourceType":"module"}