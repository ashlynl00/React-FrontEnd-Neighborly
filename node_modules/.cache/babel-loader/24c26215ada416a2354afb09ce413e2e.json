{"ast":null,"code":"var _jsxFileName = \"/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/ItemContainer/SingleItemComponent/SingleItemComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SingleItemComponent = props => {\n  _s();\n\n  const [isValidState, setIsValidState] = useState({\n    valid: true,\n    message: \"\"\n  });\n  const [showing, setShowing] = useState(false);\n\n  const toggleShowing = () => {\n    setShowing(!showing);\n  }; // we want the form to start as filled out\n\n\n  const [updateNeighborhood, setUpdateNeighborhood] = useState({\n    name: props.neighborhood.name,\n    location: props.neighborhood.location,\n    _id: props.neighborhood._id\n  }); // create a new function to listen for change, which is determined by an event, and get the value of the change\n\n  const handleInputChange = e => {\n    //// e.target will target the element that you are targeting the event on\n    // update state\n    setUpdateNeighborhood({ // we still want to keep all of the new items becuase of the preset properties\n      ...updateNeighborhood,\n      // use e.target.name to get the name of the element\n      [e.target.name]: e.target.value\n    });\n    console.log(updateNeighborhood);\n  };\n\n  const submitUpdateNeighborhood = e => {\n    // want to stop the page from refreshing when submit button is pressed\n    e.preventDefault();\n    props.updateNeighborhood(props.neighborhood._id, updateNeighborhood);\n    setShowing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.neighborhood.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.neighborhood.img\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"View More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        props.deleteNeighborhood(props.neighborhood._id);\n      },\n      children: \"Delete this Neighborhood\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        // don't forget to put in the parameter!\n        props.deleteNeighborhood(props.neighborhood._id);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), showing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"edit-neighborhood-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleShowing,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitUpdateNeighborhood,\n        children: [isValidState.valid ? null : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form-error\",\n          children: isValidState.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 54\n        }, this), \"Neighborhood Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          onChange: handleInputChange,\n          value: updateNeighborhood.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 44\n        }, this), \"Location: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"location\",\n          onChange: handleInputChange,\n          value: updateNeighborhood.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 35\n        }, this), \"Image: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"img\",\n          onChange: handleInputChange,\n          value: updateNeighborhood.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // else, show the button to create one that also has an event listener attached\n    _jsxDEV(\"button\", {\n      onClick: toggleShowing,\n      children: \"Edit this item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SingleItemComponent, \"HFdV5dIQeiYJEHYV/L8GKnbKTjs=\");\n\n_c = SingleItemComponent;\nexport default SingleItemComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleItemComponent\");","map":{"version":3,"sources":["/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/ItemContainer/SingleItemComponent/SingleItemComponent.jsx"],"names":["React","useState","SingleItemComponent","props","isValidState","setIsValidState","valid","message","showing","setShowing","toggleShowing","updateNeighborhood","setUpdateNeighborhood","name","neighborhood","location","_id","handleInputChange","e","target","value","console","log","submitUpdateNeighborhood","preventDefault","img","deleteNeighborhood"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nconst SingleItemComponent = (props) => {\n    const [isValidState, setIsValidState] = useState ({valid: true, message: \"\"});\n    const [showing, setShowing] = useState(false);\n    const toggleShowing = () => {\n        setShowing(!showing);\n    };\n    // we want the form to start as filled out\n    const [updateNeighborhood, setUpdateNeighborhood] = useState({\n        name: props.neighborhood.name,\n        location: props.neighborhood.location,\n        _id: props.neighborhood._id\n    });\n    // create a new function to listen for change, which is determined by an event, and get the value of the change\n    const handleInputChange = (e) => {\n        //// e.target will target the element that you are targeting the event on\n        // update state\n        setUpdateNeighborhood ({\n            // we still want to keep all of the new items becuase of the preset properties\n            ...updateNeighborhood,\n            // use e.target.name to get the name of the element\n            [e.target.name]: e.target.value\n        });\n        console.log(updateNeighborhood);\n    };\n    const submitUpdateNeighborhood = (e) => {\n        // want to stop the page from refreshing when submit button is pressed\n        e.preventDefault();\n        props.updateNeighborhood(props.neighborhood._id, updateNeighborhood);\n        setShowing(false); \n    }\n    return (\n        <div>\n            <h1>{props.neighborhood.name}</h1>\n            <img src={props.neighborhood.img}></img>\n            <button>View More</button>\n            <button onClick={ ()=> {\n                props.deleteNeighborhood(props.neighborhood._id);\n            }}>Delete this Neighborhood</button>\n            <button onClick={ ()=> {\n                // don't forget to put in the parameter!\n                props.deleteNeighborhood(props.neighborhood._id);\n            }}>Delete</button>\n            {showing ?\n                <div id=\"edit-neighborhood-form\">\n                    {/* close button for form */}\n                    <button onClick={toggleShowing}>Close</button>\n                    {/* we want to prevent the page from loading once we hit the submit button because we want to be able to take in that info which reloading would make it disappear */}\n                    {/* we also want to call new item from parent */}\n                    <form onSubmit={submitUpdateNeighborhood}>\n                        {isValidState.valid ? null : <p className='form-error'>{isValidState.message}</p>}\n                        Neighborhood Name: <input type=\"text\" name=\"name\" onChange={handleInputChange} value={updateNeighborhood.name}></input>\n                        Location: <input type=\"text\" name=\"location\" onChange={handleInputChange} value={updateNeighborhood.location}></input>\n                        Image: <input type=\"text\" name=\"img\" onChange={handleInputChange} value={updateNeighborhood.img}></input>\n                        <br></br>\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                </div>\n                :\n                // else, show the button to create one that also has an event listener attached\n                <button onClick={toggleShowing}>Edit this item</button>\n            }\n        </div>\n    );\n};\n\nexport default SingleItemComponent;"]},"metadata":{},"sourceType":"module"}