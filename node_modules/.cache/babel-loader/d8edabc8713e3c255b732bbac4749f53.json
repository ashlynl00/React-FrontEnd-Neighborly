{"ast":null,"code":"var _jsxFileName = \"/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/ItemContainer/NewItemComponent/NewItemComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewItemComponent = props => {\n  _s();\n\n  const [isValidState, setIsValidState] = useState({\n    valid: true,\n    message: \"\"\n  });\n  const [showing, setShowing] = useState(false);\n\n  const toggleShowing = () => {\n    setShowing(!showing);\n  };\n\n  const [newNeighborhood, setNewNeighborhood] = useState({\n    name: \"\",\n    location: \"\",\n    img: \"\"\n  });\n\n  const handleInputChange = e => {\n    setNewNeighborhood({ ...newNeighborhood,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const submitNewItem = e => {\n    e.preventDefault();\n    let validSubmission = true; // check if input is valid\n\n    if (newNeighborhood.name.length < 3) {\n      setIsValidState({\n        valid: false,\n        message: \"Name needs to be longer\"\n      });\n      validSubmission = false;\n    }\n\n    ;\n\n    if (validSubmission) {\n      // call new item function and pass in the newItem state as the parameter\n      props.createNewNeighborhood(newNeighborhood); // when we hit submit, we also want to reset values of input fields and set default value to equal these\n\n      setNewNeighborhood({\n        name: \"\",\n        location: \"\",\n        img: \"\"\n      });\n      setIsValidState({\n        valid: true,\n        message: \"\"\n      });\n      setShowing(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showing ?\n    /*#__PURE__*/\n    //// if it is showing, we want to show the form\n    // create form to allow the user to input a new product\n    _jsxDEV(\"div\", {\n      id: \"new-item-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleShowing,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitNewItem,\n        children: [isValidState.valid ? null : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form-error\",\n          children: isValidState.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 54\n        }, this), console.log(isValidState), props.newItemServerError ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form-error\",\n          children: props.newItemServerError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 53\n        }, this) : null, \"Neighborhood Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          onChange: handleInputChange,\n          value: newNeighborhood.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 44\n        }, this), \"Location: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"location\",\n          onChange: handleInputChange,\n          value: newNeighborhood.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 35\n        }, this), \"Image: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"img\",\n          onChange: handleInputChange,\n          value: newNeighborhood.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // else, show the button to create one that also has an event listener attached\n    _jsxDEV(\"button\", {\n      onClick: toggleShowing,\n      children: \"Create new item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(NewItemComponent, \"PInTGd8b6vxN0a65tvjjDVbBhfM=\");\n\n_c = NewItemComponent;\nexport default NewItemComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewItemComponent\");","map":{"version":3,"sources":["/Users/a14079/Documents/GA/Projects/Unit-3/neighborly/React-FrontEnd-Neighborly/neighborly/src/ItemContainer/NewItemComponent/NewItemComponent.jsx"],"names":["React","useState","useEffect","NewItemComponent","props","isValidState","setIsValidState","valid","message","showing","setShowing","toggleShowing","newNeighborhood","setNewNeighborhood","name","location","img","handleInputChange","e","target","value","submitNewItem","preventDefault","validSubmission","length","createNewNeighborhood","console","log","newItemServerError"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from 'react';\n\nconst NewItemComponent = (props) => {\n    const [isValidState, setIsValidState] = useState ({valid: true, message: \"\"});\n    const [showing, setShowing] = useState(false);\n    const toggleShowing = () => {\n        setShowing(!showing);\n    };\n    const [newNeighborhood, setNewNeighborhood] = useState ({\n        name: \"\",\n        location: \"\",\n        img: \"\"\n    });\n    const handleInputChange = (e) => {\n        setNewNeighborhood ({\n            ...newNeighborhood,\n            [e.target.name]: e.target.value\n        });\n    };\n    const submitNewItem = (e)=>{\n        e.preventDefault();\n        let validSubmission = true;\n        // check if input is valid\n        if (newNeighborhood.name.length < 3) {\n            setIsValidState({\n                valid: false,\n                message: \"Name needs to be longer\"\n            });\n            validSubmission = false;\n        };\n        if (validSubmission) {\n            // call new item function and pass in the newItem state as the parameter\n            props.createNewNeighborhood(newNeighborhood);\n            // when we hit submit, we also want to reset values of input fields and set default value to equal these\n            setNewNeighborhood({\n                name: \"\",\n                location: \"\",\n                img: \"\"\n            });\n            setIsValidState({\n                valid: true,\n                message: \"\"\n            });\n            setShowing(false);\n        } \n    };\n    return (\n        <>\n            {/* create ternary to decide what will show depending on if showing is equal to true */}\n            { showing ?\n                //// if it is showing, we want to show the form\n                // create form to allow the user to input a new product\n                <div id=\"new-item-form\">\n                    {/* close button for form */}\n                    <button onClick={toggleShowing}>Close</button>\n                    {/* we want to prevent the page from loading once we hit the submit button because we want to be able to take in that info which reloading would make it disappear */}\n                    {/* we also want to call new item from parent */}\n                    <form onSubmit={submitNewItem}>\n                        {isValidState.valid ? null : <p className='form-error'>{isValidState.message}</p>}\n                        {console.log(isValidState)}\n                        {props.newItemServerError ? <p className='form-error'>{props.newItemServerError}</p> : null}\n                        Neighborhood Name: <input type=\"text\" name=\"name\" onChange={handleInputChange} value={newNeighborhood.name}></input>\n                        Location: <input type=\"text\" name=\"location\" onChange={handleInputChange} value={newNeighborhood.location}></input>\n                        Image: <input type=\"text\" name=\"img\" onChange={handleInputChange} value={newNeighborhood.img}></input>\n                        <br></br>\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                </div>\n                :\n                // else, show the button to create one that also has an event listener attached\n                <button onClick={toggleShowing}>Create new item</button>\n            }\n        </>\n    );\n};\n\nexport default NewItemComponent;"]},"metadata":{},"sourceType":"module"}